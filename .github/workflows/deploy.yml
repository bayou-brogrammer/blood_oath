name: CI

on:
  # push:
  #   branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  project-name: blood-oath
  # Build mode for CMake, such as "Release" or "Debug".
  BUILD_TYPE: Release


jobs:
  rustfmt:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3  
      - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true

      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy lints
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3  
      - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true

      - run: cargo clippy --all

  build:
    name: build ${{ matrix.target }}
    runs-on: ubuntu-latest
    needs: [rustfmt, clippy]
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
            butler-url: https://broth.itch.ovh/butler/windows-amd64/LATEST/archive/default
          
          - target: x86_64-unknown-linux-musl
            archive: tar.gz tar.xz
            butler-url: https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default

          - target: wasm32-wasi
            archive: zip
            butler-url: https://broth.itch.ovh/butler/darwin-amd64/LATEST/archive/default

          - target: x86_64-apple-darwin
            archive: zip
            butler-url: https://broth.itch.ovh/butler/darwin-amd64/LATEST/archive/default

    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy

      - name: Compile and release
        id: compile
        uses: rust-build/rust-build.action@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
          UPLOAD_MODE: none
          TOOLCHAIN_VERSION: stable

      # Sets env.archive-name, which is used to name the distribution folder and archive.
      - name: Set archive name
        run: |
          ARCHIVE_NAME=${{ env.project-name }}-`git describe --always`-${{ matrix.target }}
          echo "Archive name set to: $ARCHIVE_NAME"
          echo "archive-name=$ARCHIVE_NAME" >> $GITHUB_ENV

      # Upload archives as artifacts, these can be downloaded from the GitHub Actions page.
      - name: "Upload Artifact"
        uses: actions/upload-artifact@v2
        with:
          name: automated-builds
          path: ${{ env.archive-name }}.*
          retention-days: 7
          if-no-files-found: error

      # If a tag is pushed then a new archives are uploaded to GitHub Releases automatically.
      - name: Upload release
        if: startsWith(github.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.archive-name }}.*
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true

      - name: Install Butler
        if: github.ref == 'refs/heads/main'
        run: |
          mkdir ~/bin
          cd ~/bin
          curl -L -o butler.zip ${{ matrix.butler-url }}
          unzip butler.zip
          chmod +x butler
          echo "~/bin" >> $GITHUB_PATH
          ~/bin/butler -V

      - name: Upload to Itch
        if: github.ref == 'refs/heads/main'
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: butler push target/${{ matrix.target }}/release/${{ env.project-name }} lecoqjacob/bloodoath:${{ matrix.target }}-latest